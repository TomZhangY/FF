## 根日志，默认所有日志会被继承，设置additivity来取消继承
log4j.rootLogger=DEBUG,CONSOLE
## 表示Logger不会在父Logger(根日志)的appender里输出，默认为true
log4j.additivity.ff.main=true


log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
## appender里输出debug级别以上
log4j.appender.CONSOLE.Threshold=DEBUG
## 日志会按照System.out方式在console打印，还可以配置成       system.err
log4j.appender.CONSOLE.Target=System.out
## 是否立即输出,默认true，false代表在该appender不输出，相当于一个开关
log4j.appender.CONSOLE.ImmediateFlush=true
## 设置打印内容的格式
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
## %d:日期时间   %p: 输出日志信息优先级  %r: 输出自应用启动到输出该log信息耗费的毫秒数
## %c: 输出日志类的全名  %t: 输出产生该日志事件的线程名  %%: 输出一个"%"字符
## %l: 输出日志事件的发生位置 类全民.方法(文件名:所在行号) eg:ff.main.Main.main(Main.java:18)
## %F: 输出日志消息产生时所在的文件名称  %L: 输出代码中的行号
## %m: 输出代码中指定的消息,产生的日志具体信息 %n: 输出一个回车换行符
## %20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐 
## - ：左对齐  例如 %-20c 不够20位 左对齐
## %20.30c:（长度为20~30的意思）如果小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉
log4j.appender.CONSOLE.layout.ConversionPattern=%d - %c -%-4r [%t] %-5p %l - %m%n 

## 在这里可以设置该包输出的级别
log4j.logger.ff.main=error,MAIL
log4j.appender.SPRING=org.apache.log4j.FileAppender
log4j.appender.SPRING.Threshold=DEBUG
log4j.appender.SPRING.ImmediateFlush=true
log4j.appender.SPRING.File=./log/main.log
## 默认true，false表示会覆盖
log4j.appender.SPRING.Append=false
log4j.appender.SPRING.layout=org.apache.log4j.SimpleLayout

## 每天产生一个文件
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyFile.File=./log/main1.log
log4j.appender.dailyFile.Threshold=DEBUG
log4j.appender.dailyFile.ImmediateFlush=true
log4j.appender.dailyFile.Append=true
log4j.appender.dailyFile.layout=org.apache.log4j.SimpleLayout
## '.'yyyy-MM :每月产生一个新的日志文件      '.'yyyy-ww：每周   '.'yyyy-MM-dd：每天   '.'yyyy-MM-dd-HH：每小时   '.'yyyy-MM-dd-HH-mm：每分钟 
## 日志文件名为logging.log4j.yyyy-MM,字符串用''包住
log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd'.LOG'


## 文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.File=./log/main1.log
log4j.appender.rollingFile.Threshold=DEBUG
log4j.appender.rollingFile.ImmediateFlush=true
log4j.appender.rollingFile.Append=true
log4j.appender.rollingFile.layout=org.apache.log4j.SimpleLayout
## 后缀可以是KB, MB 或者GB，在日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件中
log4j.appender.rollingFile.MaxFileSize=100KB
##  指定可以产生的滚动文件的最大数
log4j.appender.rollingFile.MaxBackupIndex=2


# 发送email通知管理员：首先下载JavaMail和JAF,引用mail.jar和activation.jar。
log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
#日志的错误级别  
log4j.appender.MAIL.Threshold=ERROR
#缓存文件大小，日志达到2时发送Email  
log4j.appender.MAIL.BufferSize=1
#发送邮件的服务器  一般免费的邮箱,如下列出的,他们的SMTP服务器就是在域名前加上smtp
# smtp.163.com  smtp.sina.com.cn
# 使用qq邮箱发送总是 出现权限认证错误
log4j.appender.MAIL.SMTPHost=smtp.163.com
#邮件主题  
log4j.appender.MAIL.Subject=Log4JErrorMessage
#发送邮件箱的用户  
log4j.appender.MAIL.SMTPUsername=a310323240@163.com
#发送邮件箱的密码   qq：rkbevswpykjhbigc
# 这里的密码不是邮箱密码，而是 授权码(专用的密码，在邮箱里设置后拿取)
log4j.appender.MAIL.SMTPPassword=a15156265622
##发送邮件箱  
log4j.appender.MAIL.From=a310323240@163.com
#接受邮件箱  
log4j.appender.MAIL.To=345683045@qq.com,310323240@qq.com
#发送邮件的格式  
log4j.appender.MAIL.layout=org.apache.log4j.HTMLLayout